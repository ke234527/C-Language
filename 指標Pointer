指標？
指標就是
讓我們去找到我們所指定的特定記憶體位置。
讓我們用指標在呼叫函數後更改引數內所存的值。
如果利用指標傳入陣列的位置，最好多傳一個引數告訴函數array的大小
------------------------------------------
指標的宣告：
(Data Type)* (變數名稱)=&(另一個變數)     //這裡的*是告訴編譯器(或電腦)該變數為指標
指標在使用前必須先宣告。

若需賦予指標一個初始值(空指標)，不是*pointer=0，而是*pointer=NULL     //好習慣

也能將陣列宣告為指標
  e.g.
      int * pointer[5];                 //pointer[0~4]皆為指標
宣告時注意：
e.g.
  int *a,b;
  int* c,d;
    上述例子中只有a,c被宣告為指標，b,d仍為一般變數
------------------------------------------
  * (value of)      取該變數的值
  & (address of )   取該變數的位址            //*和&為inverse，運作時可互相抵銷，e.g. *&a即為a
------------------------------------------
指標的size：
  ->如想知道指標的size可以使用sizeof()來查看
      經過查看之後知道：
        指標存的是記憶體的位置 所以要是作業系統的位元數不同
        指標所存的也會不同，大小也會因此不同
------------------------------------------
如果對指標做加減運算，就好像對記憶體的位置做操作
    e.g.
    int a=10;
    int *pa=&a;
    printf("%d\n",*(pa)+1);
    printf("%d\n",*(pa+1));
      第一個output為11，而第二個卻不是
    ->第二個拿到變數a後面一個int位置的值
    
    int a[10]={1,2,3,4,5,6,7,8,9,10};
    int *pa=&a[0];                      //指標pa指向a[0]    a[0]的位置即(pa+0)
    printf("%d",*(pa+1));               //output a[1]
    printf("%d",*(pa+2));               //output a[2]
